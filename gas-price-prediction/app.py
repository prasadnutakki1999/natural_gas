#!/usr/bin/env python3# -*- coding: utf-8 -*-"""Created on Sat Jul 31 12:50:40 2021@author: fasil"""from flask import Flask, request, render_templateimport requestsimport joblibfrom sklearn.preprocessing import StandardScalerimport pandas as pdimport numpy as npdata=pd.read_csv('./data/naturalgas.csv')data['year'] = pd.DatetimeIndex(data['Date']).yeardata['month'] = pd.DatetimeIndex(data['Date']).monthdata['day'] = pd.DatetimeIndex(data['Date']).daydata.drop('Date',axis=1,inplace=True)x=data.iloc[:,1:4].valuessc= StandardScaler()x=sc.fit_transform(x)print(x)model1 = joblib.load('./models/DecisionTreeRegressor.save')model2 = joblib.load('./models/RandomForestRegressor.save')model3 = joblib.load('./models/standarscaler.save')app = Flask(__name__)@app.route('/')def home():    return render_template('index.html')@app.route('/prediction', methods=['POST'])def prediction():    option = [[int(x) for x in request.form.values()]]    if option[0][0] == 2:        del option[0][0]        x_test = option        x_test = sc.transform(x_test)        print(x_test)        print("Scoring response")        pred = model1.predict(x_test)[0]        output = 'Gas Price for the given date is: {} Dollars'.format(pred)    else:        del option[0][0]        x_test = option        x_test = sc.transform(x_test)        print(x_test)        print("Scoring response")        pred = model2.predict(x_test)        output = 'Gas Price for the given date is: {} Dollars'.format(pred)    return render_template('index.html', predic_text=output)if __name__ == "__main__":    app.run(debug=True)